// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type Profile {
  firstName      String
  lastName       String
  profilePicture String?
  department     Department?
}

model User {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  email         String   @unique
  password      String
  profile       Profile
  authoredKudos Kudo[]   @relation("AuthoredKudos")
  kudos         Kudo[]   @relation("ReceivedKudos")
}

enum Emoji {
  THUMBSUP
  PARTY
  HANDSUP
}

enum Department {
  MARKETING
  SALES
  ENGINEERING
  HR
}

enum Color {
  RED
  GREEN
  YELLOW
  BLUE
  WHITE
}

type KudoStyle {
  backgroundColor Color @default(YELLOW)
  textColor       Color @default(WHITE)
  emoji           Emoji @default(THUMBSUP)
}

model Kudo {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  message     String
  createdAt   DateTime   @default(now())
  style       KudoStyle?
  author      User       @relation(fields: [authorId], references: [id], "AuthoredKudos")
  authorId    String     @db.ObjectId
  recipient   User       @relation(fields: [recipientId], references: [id], "ReceivedKudos")
  recipientId String     @db.ObjectId
}

model GoogleAPIsCredential {
  id                          String                  @id @default(auto()) @map("_id") @db.ObjectId
  type                        String?                 @default("service_account")
  project_id                  String
  private_key_id              String
  private_key                 String
  client_email                String
  client_id                   String?
  auth_uri                    String?
  token_uri                   String
  auth_provider_x509_cert_url String?
  client_x509_cert_url        String?
  universe_domain             String?
  access_tokens               GoogleAPIsAccessToken[] @relation("GoogleAPIsAccessToken")
}

model GoogleAPIsAccessToken {
  id           String               @id @default(auto()) @map("_id") @db.ObjectId
  access_token String
  expires_in   Int // time in seconds
  token_type   String
  created_at   DateTime             @default(now()) // timestamps in milliseconds
  credential   GoogleAPIsCredential @relation(fields: [credentialId], references: [id], "GoogleAPIsAccessToken")
  credentialId String               @db.ObjectId
}
